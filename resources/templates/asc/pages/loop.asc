{:title "Loop"
:layout :page
:page-index 5
:date "2015-06-27"
:category "Asas"
:description "Loop boleh membuatkan program kita mengulang sesuatu proses. Ini sesuai digunakan kepada data yang banyak supaya kita tidak perlu copy paste code kita."}

Loop ialah kaedah untuk mengulangi sesuatu proses.

Contohnya, jika kita mahu menulis sesuatu sebanyak 100 kali. Satu cara
adalah dengan menulis ‘System.out.println()’ sebanyak 100 kali, tapi
apakan daya, kita manusia biasa. Jadi, kita boleh beritahu program untuk
‘System.out.println()’ sebanyak 100 kali.

Ada tiga cara untuk menulis loop, iaitu: _while loop_, _for loop_, dan
_do while loop_. Semuanya lakukan benda yang sama iaitu untuk mengulangi
sesuatu.

=== While loop

Program untuk menulis sesuatu berkali-kali:

[source,java]
----
public class ContohWhileLoop {
    public static void main(String[] args) {
        int count = 0; // variable untuk mengira

        while (count < 100) { // bermaksud selagi count kurang daripada 100

            System.out.println("Cikgu suka main bola, hari-hari cikgu main bola.");
            count++; // tambah satu setelah menulis sesuatu pada terminal
        }
    }
}
----

Kurungan selepas ‘while’ ialah syarat yang kita tetapkan untuk
mengulang. Jadi, code tersebut bermaksud:

-   Tulis _“Cikgu suka main bola, hari-hari cikgu main bola.”_
-   Tambah satu pada _count_.
-   Ulang dengan syarat _‘count kurang daripada 100’_.
-   Loop akan berhenti apabila count sudah menjadi 100 kerana sudah
melanggar syarat.

=== For loop

Program yang sama tetapi menggunakan _for loop_:

[source,java]
----
public class ContohForLoop {
    public static void main(String[] args) {
        for (int count = 0; count < 100; count++) {
            System.out.println("Cikgu suka main bola, hari-hari cikgu main bola.");
        }
    }
}
----

Kurungan selepas _‘for’_ diletakkan tiga benda sama yang ada pada _while
loop_:

-   Variable _count_ untuk mengira.
-   Syarat untuk mengulang, _‘count < 100’_.
-   Penambahan kepada variable _count_.

=== Do while loop

Program yang sama tetapi menggunakan _do while loop_:

[source,java]
----
public class ContohDoWhileLoop {
    public static void main(String[] args) {
        int count = 0;

        do {
            System.out.println("Cikgu suka main bola, hari-hari cikgu main bola.");
            count++;
        } while (count < 100);
    }
}
----

=== While loop vs do while loop

Beza antara dua loop ini ialah kedudukan syarat untuk mengulang. Untuk
_while loop_ diletakkan pada awal code, dan untuk _do while loop_
diletakkan pada akhir code. Kesannya, do while loop mesti akan execute
code tersebut paling kurang sekali.

Sebagai bukti, kita boleh execute dua program menggunakan syarat _‘count
< 0’_:

[source,java]
----
public class WhileVsDoWhile {
    public static void main(String[] args) {
        int count = 0;

        while (count < 0) {
            System.out.println("Cikgu suka main bola, hari-hari cikgu main bola.");
            count++;
        }
    }
}
----

[source,java]
----
public class WhileVsDoWhile {
    public static void main(String[] args) {
        int count = 0;

        do {
            System.out.println("Cikgu suka main bola, hari-hari cikgu main bola.");
            count++;
        } while (count < 0);
    }
}
----

Hasilnya, hanya string dari _do while loop_ yang dipaparkan.
