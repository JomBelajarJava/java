{:title "Konsep OOP"
:layout :post
:date "2015-06-28"}

_Object-oriented programming_ (OOP) ialah konsep programming yang
mengambil contoh daripada dunia nyata. Contohnya, lihat sahaja di
sekeliling anda, ada pelbagai benda (objek) yang wujud. Ada almari, beg,
katil, kucing, baldi, rumah, kereta, dan segala-galanyalah. Setiap benda
mempunyai:

-   Ciri-ciri; contohnya, saiz botol besar atau kecil, usia kucing muda
atau tua
-   Tingkah laku; contohnya, botol boleh diisi air, kucing boleh berlari

=== Object

Dalam programming, ‘object’ bermaksud data yang mempunyai ciri-ciri
(_fields_) dan tingkah laku (_methods_) yang tersendiri.

=== Class

Ada benda yang kelihatan serupa tetapi merupakan dua benda yang berbeza.
Contohnya, kereta Waja milik Pak Man sama dengan kereta Waja milik Pak
Mail. Walaupun dua-dua ialah kereta Waja, tetapi satu milik Pak Man, dan
satu lagi milik Pak Mail. Jadi, dua-dua kereta tersebut boleh
dikategorikan dalam _‘class’_ yang sama, iaitu kereta Waja.

Dalam programming, _‘class’_ yang menentukan ciri-ciri (_fields_) dan
tingkah laku (_methods_) sesuatu _‘object’_.

=== Inheritance

Walaupun kereta Waja dan kereta Kancil kelihatan berbeza, kedua-duanya
masih boleh dikategorikan sebagai kereta. Tambahan pula, walaupun kereta
dan lori kelihatan berbeza, kedua-duanya boleh dikategorikan sebagai
kenderaan. Konsep ini dipanggil sebagai _‘inheritance’_.

Dalam programming, sesuatu _‘class’_ boleh dikategorikan di bawah
_‘class’_ yang lain menggunakan konsep _‘inheritance’_.

=== Interface

Di kilang kereta, sebelum sesebuah kereta boleh dijual, kereta itu
perlulah mematuhi keperluan sebagai sebuah kereta. Contohnya, kereta itu
mestilah boleh bergerak ke depan dan ke belakang, boleh membelok ke kiri
dan ke kanan, dan sebagainya.

Dalam programming, kita boleh tetapkan tingkah laku (_methods_) sesuatu
_‘class’_ menggunakan _‘interface’_. Apabila sesuatu _‘class’_
menggunakan _‘interface’_, _‘class’_ tersebut wajib menepati keperluan
_‘interface’_ tersebut.

=== Package

Ambil contoh pakej pelancongan. Pakej pelancongan biasanya ada
perkhidmatan bas, tempat penginapan, dan tempat-tempat menarik. Walaupun
semua benda tersebut tidak berada dalam _‘class’_ yang sama, tetapi
semuanya berkaitan dengan pelancongan.

Dalam programming, _‘class’_ yang berkaitan boleh diletakkan di bawah
_‘package’_ yang sama. Tujuan _‘package’_ adalah untuk memudahkan
pengurusan _‘class’_ tersebut.
