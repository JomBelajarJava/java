{:title "For each loop"
:layout :post
:date "2015-07-05"
:category "Data Structure"}

Jika kita menggunakan sesebuah _data structure_, kebiasaannya akan ada
proses yang kita perlu buat kepada semua data di dalam _data structure_
tersebut. Untuk mengakses semua data, kita boleh menggunakan _loop_
seperti berikut:

[source,java]
----
package datastructure;

public class ContohForEachLoop {
    public static void main(String[] args) {
        String[] names = {"John", "Jack", "Jill", "Jackson"};

        for (int i = 0; i < names.length; i++) {
            System.out.println(names[i]);
        }
    }
}
----

Satu lagi cara adalah dengan menggunakan _for each loop_:

[source,java]
----
package datastructure;

public class ContohForEachLoop {
    public static void main(String[] args) {
        String[] names = {"John", "Jack", "Jill", "Jackson"};

        for (String name : names) {
            System.out.println(name);
        }
    }
}
----

_For each loop_ akan akses semua data tanpa perlu meletakkan nombor
indeks. Ini bagi memudahkan programmer lain. Jika nampak _for each loop_
sahaja sudah tahu bahawa _loop_ tersebut akan akses semua data dalam
sesebuah _data structure_.

Antara kelemahannya ialah _for each loop_ tidak boleh akses dua data
pada satu masa. Contoh jika menggunakan _loop_ biasa:

[source,java]
----
package datastructure;

public class ContohForEachLoop {
    public static void main(String[] args) {
        String[] names = {"John", "Jack", "Jill", "Jackson"};

        for (int i = 0; i < names.length - 1; i++) {
            System.out.println(names[i] + " " + names[i + 1]);
        }
    }
}
----
