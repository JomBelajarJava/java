{:title "Input dari file"
:layout :post
:date "2015-07-20"
:category "Class Yang Penting"}

Kebanyakan program seperti Notepad, Photoshop, dan Word membenarkan user
untuk _save_ kerja mereka di dalam komputer. Kemudian user boleh sambung
semula dengan menggunakan _save file_ tersebut. Java juga ada
menyediakan _class_ untuk mengambil _input_ daripada _file_. Jadi, kita
akan lihat cara penggunaan _class_ tersebut.

Sebelum itu, kita perlu buat _file_ terlebih dahulu dengan menggunakan
mana-mana _text editor_. Kita tulis apa-apa sahaja yang kita mahu di
dalam _file_ tersebut. Selepas itu, kita _save_ file tersebut
sebagai _‘cubaan.txt’_ atau apa-apa sahaja yang anda mahu. Kemudian kita
letakkan _file_ tersebut di dalam folder project Netbeans.

=== FileReader

Kita boleh menggunakan class _FileReader_ untuk mengambil input daripada
_file_. Untuk menggunakan class _FileReader_, kita perlu _handle
exception_ untuk mengelakkan _error_, contohnya jika _file_ tersebut
tidak wujud. Method _‘read()’_ boleh digunakan untuk mendapatkan
_character _daripada file. Selepas digunakan, class _FileReader_ perlu
ditutup semula menggunakan method _‘close()’_.

[source,java]
----
package essential;

import java.io.FileReader;
import java.io.IOException;

public class InputDariFile {

    public static void main(String[] args) throws IOException {

        FileReader reader = null;

        try {
            reader = new FileReader("cubaan.txt");
            int input = reader.read();
            System.out.println(input);
        } finally {
            reader.close();
        }
    }
}
----

Selepas _run_, kita akan dapat satu nombor. Nombor ini ialah nombor
ASCII kerana komputer menyimpan data dalam bentuk nombor.

Klik untuk lihat senarai nombor ASCII

Untuk menukar nombor tersebut kepada _character_, kita boleh menggunakan
method _‘Character.toChars()’_:

[source,java]
----
package essential;

import java.io.FileReader;
import java.io.IOException;

public class InputDariFile {

    public static void main(String[] args) throws IOException {

        FileReader reader = null;

        try {
            reader = new FileReader("cubaan.txt");
            int input = reader.read();
            System.out.println(Character.toChars(input));
        } finally {
            reader.close();
        }
    }
}
----

dan kita akan mendapat _character _pertama yang kita tulis dalam _file_.

Untuk mendapatkan semua _character_, kita boleh menggunakan _loop_:

[source,java]
----
package essential;

import java.io.FileReader;
import java.io.IOException;

public class InputDariFile {

    public static void main(String[] args) throws IOException {

        FileReader reader = null;

        try {
            reader = new FileReader("cubaan.txt");

            int input;

            while ((input = reader.read()) != -1) {
                System.out.print(Character.toChars(input));
            }
        } finally {
            reader.close();
        }
    }
}
----

_Loop_ tersebut akan berhenti apabila nombor yang dipulangkan bersamaan
-1 yang bermaksud tiada _character_ lagi yang wujud.

=== BufferedReader

Sebelum ini kita lihat class _FileReader_ mengambil satu _character_
pada satu masa. Cara ini sebenarnya tidak efisyen. Jadi, Java
menyediakan class _BufferedReader_ untuk membuatkan proses mengambil
input lebih efisyen.

[source,java]
----
package essential;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class InputDariFile {

    public static void main(String[] args) throws IOException {

        BufferedReader reader = null;
        try {
            reader = new BufferedReader(new FileReader("cubaan.txt"));

            String input = reader.readLine();
            System.out.println(input);
        } finally {
            reader.close();
        }
    }
}
----

Class _FileReader_ masih digunakan cuma kali ini dibantu oleh class
_BufferedReader_. Method _‘readLine()’_ akan terus mengambil sepanjang
baris dalam file tersebut sebagai string.

Kita boleh menggunakan _loop_ jika _file_ tersebut mempunyai lebih
daripada satu baris:

[source,java]
----
package essential;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class InputDariFile {
    public static void main(String[] args) throws IOException {

        BufferedReader reader = null;

        try {
            reader = new BufferedReader(new FileReader("cubaan.txt"));
            String input;

            while ((input = reader.readLine()) != null) {
                System.out.println(input);
            }
        } finally {
            reader.close();
        }
    }
}
----
